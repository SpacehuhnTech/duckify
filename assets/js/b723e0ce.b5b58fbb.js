"use strict";(self.webpackChunkduckify=self.webpackChunkduckify||[]).push([[730],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(n),f=r,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||l;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8593:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>V,contentTitle:()=>_,default:()=>x,frontMatter:()=>w,metadata:()=>O,toc:()=>T});var a=n(7462),r=n(7294),l=n(3905),i=n(6010),o=n(2466),u=n(6550),s=n(1980),c=n(7392),p=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function f(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,u.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=f(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[u,s]=h({queryString:n,groupId:a}),[c,d]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),b=(()=>{const e=u??c;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{b&&o(b)}),[b]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),s(e),d(e)}),[s,d,l]),tabValues:l}}var k=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:l,selectValue:u,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=s[n].value;a!==l&&(p(t),u(a))},f=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:f,onClick:d},o,{className:(0,i.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":l===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function E(e){const t=b(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",g.tabList)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function N(e){const t=(0,k.Z)();return r.createElement(E,(0,a.Z)({key:String(t)},e))}const D={tabItem:"tabItem_Ymn6"};function I(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(D.tabItem,a),hidden:n},t)}const w={id:"change-ids",title:"Edit VID & PID"},_=void 0,O={unversionedId:"digispark/change-ids",id:"digispark/change-ids",title:"Edit VID & PID",description:"You can make the Digispark appear as a different device, such as an Apple keyboard.",source:"@site/docs/digispark/change-ids.md",sourceDirName:"digispark",slug:"/digispark/change-ids",permalink:"/docs/digispark/change-ids",draft:!1,editUrl:"https://github.com/spacehuhntech/duckify/blob/main/docs/digispark/change-ids.md",tags:[],version:"current",frontMatter:{id:"change-ids",title:"Edit VID & PID"},sidebar:"docs",previous:{title:"Usage",permalink:"/docs/digispark/usage"},next:{title:"Basics",permalink:"/docs/scripting/basics"}},V={},T=[],C={toc:T},S="wrapper";function x(e){let{components:t,...r}=e;return(0,l.kt)(S,(0,a.Z)({},C,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"You can make the Digispark appear as a different device, such as an Apple keyboard.\nThis is useful if you want to skip the keyboard setup assistant on macOS."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"You can change the IDs to anything you want. Websites like ",(0,l.kt)("a",{parentName:"p",href:"https://devicehunt.com/"},"devicehuhnt.com")," have a database that you can search for registered USB devices.")),(0,l.kt)("p",null,"But to achieve this, you have to manipulate the USB Product ID (PID) and Vendor ID (VID) deep in the Arduino Digispark files."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"In Arduino, open ",(0,l.kt)("strong",{parentName:"li"},"File")," > ",(0,l.kt)("strong",{parentName:"li"},"Preferences")),(0,l.kt)("li",{parentName:"ol"},"Click on the Path at the bottom (it's a shortcut)\n",(0,l.kt)("img",{alt:"Arduino Path",src:n(9220).Z,width:"1920",height:"1080"})),(0,l.kt)("li",{parentName:"ol"},"Open ",(0,l.kt)("strong",{parentName:"li"},"packages")," > ",(0,l.kt)("strong",{parentName:"li"},"digistump")," > ",(0,l.kt)("strong",{parentName:"li"},"hardware")," > ",(0,l.kt)("strong",{parentName:"li"},"avr")," > ",(0,l.kt)("strong",{parentName:"li"},"1.7.5")," (or other version number) > ",(0,l.kt)("strong",{parentName:"li"},"libraries")," > ",(0,l.kt)("strong",{parentName:"li"},"DigiKeyboard")),(0,l.kt)("li",{parentName:"ol"},"Make a copy of ",(0,l.kt)("strong",{parentName:"li"},"usbconfig.h")," and call it ",(0,l.kt)("strong",{parentName:"li"},"usbconfig_BACKUP.h")," in case you need to undo the changes"),(0,l.kt)("li",{parentName:"ol"},"Open ",(0,l.kt)("strong",{parentName:"li"},"usbconfig.h")," in a text editor"),(0,l.kt)("li",{parentName:"ol"},"Replace the following lines:  ")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Download a already modified ",(0,l.kt)("a",{target:"_blank",href:n(3394).Z},"usbconfig.h here")," to save you time. Otherwise, continue below and don't overlook the other tabs!")),(0,l.kt)(N,{defaultValue:"vid",values:[{label:"USB VID",value:"vid"},{label:"USB PID",value:"pid"},{label:"Vendor Name",value:"vendor"},{label:"Device Name",value:"device"}],mdxType:"Tabs"},(0,l.kt)(I,{value:"vid",mdxType:"TabItem"},(0,l.kt)("p",null,"To set 05AC as USB VID (Apple), replace"),(0,l.kt)("pre",null,"#define USB_CFG_VENDOR_ID 0xc0, 0x16"),(0,l.kt)("p",null,"with"),(0,l.kt)("pre",null,"#define USB_CFG_VENDOR_ID 0xAC, 0x05")),(0,l.kt)(I,{value:"pid",mdxType:"TabItem"},(0,l.kt)("p",null,"To use 0250 as USB PID (Apple Aluminium Keyboard with ISO layout), replace"),(0,l.kt)("pre",null,"#define USB_CFG_DEVICE_ID 0xdb, 0x28"),(0,l.kt)("p",null,"with"),(0,l.kt)("pre",null,"#define USB_CFG_DEVICE_ID 0x50, 0x02")),(0,l.kt)(I,{value:"vendor",mdxType:"TabItem"},(0,l.kt)("p",null,"To set the vendor name to Apple, replace"),(0,l.kt)("pre",null,"#define USB_CFG_VENDOR_NAME     'd','i','g','i','s','t','u','m','p','.','c','o','m'"),(0,l.kt)("p",null,"with"),(0,l.kt)("pre",null,"#define USB_CFG_VENDOR_NAME     'A','p','p','l','e'"),(0,l.kt)("hr",null),(0,l.kt)("p",null,"and"),(0,l.kt)("pre",null,"#define USB_CFG_VENDOR_NAME_LEN 13"),(0,l.kt)("p",null,"with"),(0,l.kt)("pre",null,"#define USB_CFG_VENDOR_NAME_LEN 5")),(0,l.kt)(I,{value:"device",mdxType:"TabItem"},(0,l.kt)("p",null,"To set the device name to Keyboard, replace"),(0,l.kt)("pre",null,"#define USB_CFG_DEVICE_NAME     'D','i','g','i','K','e','y'"),(0,l.kt)("p",null,"with"),(0,l.kt)("pre",null,"#define USB_CFG_DEVICE_NAME     'K','e','y','b','o','a','r','d'"),(0,l.kt)("hr",null),(0,l.kt)("p",null,"and"),(0,l.kt)("pre",null,"#define USB_CFG_DEVICE_NAME_LEN 7"),(0,l.kt)("p",null,"with"),(0,l.kt)("pre",null,"#define USB_CFG_DEVICE_NAME_LEN 8"))))}x.isMDXComponent=!0},3394:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/usbconfig-924d1236af144eda949b3e2f7c3557ba.h"},9220:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Arduino-Path-af38afc4a7f2753d61f57a101fe65573.jpg"}}]);